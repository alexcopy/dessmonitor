name: CI / CD  –  DessMonitor

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  IMAGE_NAME: redcopy/dessmonitor
  DOCKER_BUILDKIT: 1

jobs:
# ────────────────────────────────────────────────────────────────
# 1️⃣
# ────────────────────────────────────────────────────────────────
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️  Checkout
        uses: actions/checkout@v4

      # ↓ кэш для pip  (ускоряет build)
      - name: ♻️  Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}


      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ↓ борка и push
      - name: 🏗️  Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

# ────────────────────────────────────────────────────────────────
# 2️⃣  Deploy  (выполняется ТОЛЬКО если KUBE_CONFIG задан)
# ────────────────────────────────────────────────────────────────
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ secrets.KUBE_CONFIG != '' }}     # ← ключевой фильтр!

    env:
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      NAMESPACE: dess                         # можно изменить
      RELEASE: dessmonitor

    steps:
      - name: 🛎️  Checkout (манифесты)
        uses: actions/checkout@v4

      - name: 🛠 Prepare kube‑config
        run: |
          mkdir -p "$HOME/.kube"
          echo "${KUBE_CONFIG}" > "$HOME/.kube/config"
          chmod 600 "$HOME/.kube/config"

      - name: 📦  Set kubectl context
        uses: azure/setup-kubectl@v3          # kubectl ^1.29
        with:
          version: v1.29.2

      # ─── применяем манифест ───
      - name: 🚀  kubectl apply
        run: |
          kubectl -n "$NAMESPACE" apply -f k8s/dessmonitor-deployment.yaml
          kubectl -n "$NAMESPACE" rollout status deploy/$RELEASE
